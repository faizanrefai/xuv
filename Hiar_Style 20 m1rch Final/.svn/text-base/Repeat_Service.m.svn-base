//
//  Repeat_Service.m
//  Hiar_Style_New
//
//  Created by Vivek Rajput on 8/17/11.
//  Copyright 2011 __MyCompanyName__. All rights reserved.
//

#import "Repeat_Service.h"

#import "Service_Listing.h"
#import "Formulla.h"
#import "ContactDetail.h"
#import "Client_History.h"
#import "Service_Listing.h"
#import "Client_History_More.h"

@implementation Repeat_Service
@synthesize scrl,tblViewCell;

/*
 // The designated initializer.  Override if you create the controller programmatically and want to perform customization that is not appropriate for viewDidLoad.
- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil {
    if ((self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil])) {
        // Custom initialization
    }
    return self;
}
*/
-(void)viewWillAppear:(BOOL)animated{

    
    
    
    objappdel=(Hiar_Style_NewAppDelegate *)[[UIApplication sharedApplication]delegate];
    
    arr=[[NSArray alloc] initWithObjects:@"Formula Type",@"Color Line",@"Color Formulation",@"Additional Color",@"Developer Formula",@"Processing Time",nil];
	self.navigationController.navigationBar.hidden=TRUE;
	
	
	objdatabase=[[DataBase alloc]init];
    arrliformula=[[NSMutableArray alloc]init];
    arrlistservice =[[NSMutableArray alloc]init];
    
	//[objappdel createEditableCopyOfDatabaseIfNeeded];
	
   
        
    
    [self showdata];
	[self showformula];
	lblusername.text=objappdel.strclientname;
	if([arrlistservice count]==0){}
	else{
        lbldate.text=[(NSDictionary *)[arrlistservice objectAtIndex:0]valueForKey:@"date"];
	    
	int size;
	size=([arrlistservice count]*50);
	////nslog(@"%d",size);
	
	
	
	tblservice = [[UITableView alloc]initWithFrame:CGRectMake(0,225, 320,size) style:UITableViewStyleGrouped];
	//[RegScroll addSubview:countryTable];
	tblservice.delegate=self;
	tblservice.dataSource=self;
	tblservice.backgroundColor=[UIColor clearColor];
	//tblstate.d
	[scrl addSubview:tblservice];
	tblservice.hidden=FALSE;
	[tblservice reloadData];
	tblservice.scrollEnabled=FALSE;
	int lbl;
	lbl=size+270;
	CGRect nameLabelRect = CGRectMake(12,lbl,200,15);
	
	UILabel *label = [[UILabel alloc] initWithFrame:nameLabelRect];
	label.text=@"Formula";
        label.textColor=[UIColor darkGrayColor];
        label.font=[UIFont boldSystemFontOfSize:14];
        
	label.backgroundColor=[UIColor clearColor];
        label.font=[UIFont fontWithName:@"Arial" size:14.0];
        label.font=[UIFont boldSystemFontOfSize:14];

        
	[self.scrl addSubview:label];
	[label release];
	
	btnfrml = [UIButton buttonWithType:UIButtonTypeCustom];
	[btnfrml addTarget:self action:@selector(select_formula:) forControlEvents:UIControlEventTouchUpInside];
	
	[btnfrml setImage:[UIImage imageNamed:@"editbarbutton.png"] forState:UIControlStateNormal];
	int ia;
	ia=lbl-10;
	
	btnfrml.frame = CGRectMake(198, ia, 53, 33);
	[self.scrl addSubview:btnfrml];
	
	
	
	int demo;
	demo=290+size;
	
	tblform = [[UITableView alloc]initWithFrame:CGRectMake(0,demo, 320,320) style:UITableViewStyleGrouped];
	//[RegScroll addSubview:countryTable];
	tblform.delegate=self;
	tblform.dataSource=self;
	tblform.backgroundColor=[UIColor clearColor];
	//tblstate.d
	[scrl addSubview:tblform];
	tblform.hidden=FALSE;
	[tblform reloadData];
	tblform.scrollEnabled=FALSE;
	
    int scr;
    scr=demo+500;
    [scrl setScrollEnabled:YES];
	[scrl setContentSize:CGSizeMake(320, scr)];
	
    int tot=size+230;
    CGRect nameLabelRect1 = CGRectMake(12,tot,200,15);
	
	UILabel *label1 = [[UILabel alloc] initWithFrame:nameLabelRect1];
	label1.text=@"Total";
        label1.textColor=[UIColor blackColor];
        
	label1.backgroundColor=[UIColor clearColor];
        label1.font=[UIFont fontWithName:@"Arial" size:14.0];
        label1.font=[UIFont boldSystemFontOfSize:14];
        
	[self.scrl addSubview:label1];
	[label1 release];
    
    CGRect nameLabelRect2 = CGRectMake(210,tot,300,15);
    
    
    label2 = [[UILabel alloc] initWithFrame:nameLabelRect2];
    
    label2.backgroundColor=[UIColor clearColor];
        label2.textColor=[UIColor blackColor];
        label2.font=[UIFont fontWithName:@"Arial" size:14.0];
        label2.font=[UIFont boldSystemFontOfSize:14];
        
        
    total=0;
    
    [self.scrl addSubview:label2];
	[tblform reloadData];
	}


}
// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.
- (void)viewDidLoad {
    [super viewDidLoad];
	self.view.backgroundColor=[UIColor groupTableViewBackgroundColor];
    tblservice.scrollEnabled=FALSE;
    
	
}






-(void)showdata{
    
    NSString *s = [NSString stringWithFormat:@"where CID=%@ and Date='%@'",objappdel.idvalue,objappdel.strdate];
    
    [objdatabase ShowDataForServiceDetails:s];
    [arrlistservice addObjectsFromArray:objdatabase.catchArray];
    
    
    
}



-(void)showformula{
    
    [objdatabase ShowFormullaDetail];
    [arrliformula addObjectsFromArray:objdatabase.catchArray];
    
	
	
	
	
    
}




- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}


// Customize the number of rows in the table view.
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    if(tableView==tblservice)
	{
		return [arrlistservice	count];
		
	}
	if(tableView==tblform){
		return [arr count];
		
	}
	return 7;
	
}


-(IBAction)Add_Photo:(id)sender{

    UIButton *btn=(UIButton *)sender;

    imagetag=btn.tag;
    
    
    
    
	UIActionSheet *actionsheet=[[UIActionSheet alloc] initWithTitle:@"" delegate:self cancelButtonTitle:@"Cancel" destructiveButtonTitle:nil otherButtonTitles:@"Take Photo or Video",@"Choose from Library",nil];
	
	[actionsheet showInView:self.parentViewController.tabBarController.view];
	
	[actionsheet release];
}

- (void) actionSheet:(UIActionSheet *)actionsheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
	// After saving iamge, dismiss camera
	
	if (buttonIndex == 0) {
        Camera=TRUE;

		UIImagePickerController *imagePicker = [[UIImagePickerController alloc] init];
		imagePicker.delegate = self;
		if([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera])
        {
            imagePicker.sourceType = UIImagePickerControllerSourceTypeCamera;
        }
        else {
            imagePicker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
        }
imagePicker.editing=NO;
		
		[self presentModalViewController:imagePicker animated:YES];
		
		[imagePicker release];
	}        
	if(buttonIndex ==1) {
        Camera=FALSE;
		UIImagePickerController *picker;
		picker = [[UIImagePickerController alloc]init];
		picker.delegate = self;
		picker.sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
		picker.editing=NO;
		
		
		[self presentModalViewController:picker animated:YES];
        [picker release];
        
	}	
	
	[self dismissModalViewControllerAnimated:YES];	
}

- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info 
{
	[picker dismissModalViewControllerAnimated:YES];
	imageView.image = [info objectForKey:@"UIImagePickerControllerOriginalImage"];
	imageView.hidden = TRUE;
	//	NSString *date1,*date2;
	//	NSString *picname1,*picname;
	NSDate *date = [NSDate date];
	NSDateFormatter* formatter = [[[NSDateFormatter alloc] init] autorelease];
	[formatter setDateFormat:@"MMddYYHHMMSS"];
	date1= [formatter stringFromDate:date];
	date2=[date1 stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]];
	picname1=[@"image" stringByAppendingString:date2];
	picname=[[picname1 stringByAppendingString:@".jpg"]retain];
	NSArray *paths = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask, YES);
	NSString *documentsDirectory = [paths objectAtIndex:0];
	NSString *dataFilePath = [[documentsDirectory stringByAppendingPathComponent:picname] retain];
	//[UIImagePNGRepresentation(imageView.image) writeToFile:dataFilePath atomically:YES ];
	//lbldate.text=date2;
    [UIImageJPEGRepresentation(imageView.image, 1.0) writeToFile:dataFilePath atomically:YES];
    
    
    
    if(imagetag==1)
    {

        
        
//        [btnimage1 setImage:imageView.image forState:UIControlStateNormal];
//        [btnimage1 setTitle:@"" forState:UIControlStateNormal];
        
        
        	[btnimage1 setImage:[self resizeImage:imageView.image width:btnimage1.frame.size.width height:btnimage1.frame.size.height] forState:UIControlStateNormal];
	[btnimage1 setTitle:@"" forState:UIControlStateNormal];
        
        
        if(Camera)
        {
            btnimage1.transform=CGAffineTransformMakeRotation(M_PI / 2);
            
            Library =TRUE;
            
            
        }
        else{
            if(Library)
            {
                btnimage1.transform=CGAffineTransformMakeRotation(M_PI * 2);
                
                
            }
            
        }
        
        
        
	}
    else if(imagetag==2)
    {

      //  [btnimage2 setImage:imageView.image forState:UIControlStateNormal];

        
                [btnimage2 setImage:[self resizeImage:imageView.image width:btnimage2.frame.size.width height:btnimage2.frame.size.height] forState:UIControlStateNormal];
        [btnimage2 setTitle:@"" forState:UIControlStateNormal];
        
        
        if(Camera)
        {
            btnimage2.transform=CGAffineTransformMakeRotation(M_PI / 2);
            
            Library =TRUE;
            
            
        }
        else{
            if(Library)
            {
                btnimage2.transform=CGAffineTransformMakeRotation(M_PI * 2);
                
                
            }
            
        }

        
        
    
    }
    else{
        
        
        
        
       // [btnimage3 setImage:imageView.image forState:UIControlStateNormal];
        
        
        [btnimage3 setImage:[self resizeImage:imageView.image width:btnimage3.frame.size.width height:btnimage3.frame.size.height] forState:UIControlStateNormal];
          [btnimage3 setTitle:@"" forState:UIControlStateNormal];

        
        
//        
        if(Camera)
        {
            btnimage3.transform=CGAffineTransformMakeRotation(M_PI / 2);
            
            Library =TRUE;
            
            
        }
        else{
            if(Library)
            {
                btnimage3.transform=CGAffineTransformMakeRotation(M_PI * 2);
                
                
            }
            
        }
//
//        
    
    }
	
    //[objappdel createEditableCopyOfDatabaseIfNeeded];
	
	[dataFilePath release];
    
	[self saveimage];

}	
-(UIImage *)resizeImage:(UIImage *)image3 width:(int)width height:(int)height {
	
	CGImageRef imageRef = [image3 CGImage];
	CGImageAlphaInfo alphaInfo = CGImageGetAlphaInfo(imageRef);
	
	//if (alphaInfo == kCGImageAlphaNone)
    alphaInfo = kCGImageAlphaNoneSkipLast;
	
	CGContextRef bitmap = CGBitmapContextCreate(NULL, width, height, CGImageGetBitsPerComponent(imageRef), 4 * width, CGImageGetColorSpace(imageRef), alphaInfo);
	CGContextDrawImage(bitmap, CGRectMake(0, 0, width, height), imageRef);
	CGImageRef ref = CGBitmapContextCreateImage(bitmap);
	UIImage *result = [UIImage imageWithCGImage:ref];
	
	CGContextRelease(bitmap);
	CGImageRelease(ref);
	
	return result;	
}
-(void)saveimage{

    NSDate *now = [NSDate date];
    
    NSString *strDate = [[NSString alloc] initWithFormat:@"%@",now];
    NSArray *arrdate = [strDate componentsSeparatedByString:@" "];
    NSString *str11;
    str11 = [arrdate objectAtIndex:0];
    [strDate release];
   
    [objdatabase InsertIntoImage:picname :objappdel.strdate];
}

// Customize the appearance of table view cells.
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
	
	
	
	static NSString *cellIdentifier = @"MyIdentifire";
	TableCell *cell = (TableCell*)[tableView dequeueReusableCellWithIdentifier:cellIdentifier];
//	
//    UIImageView *cellImg = [[UIImageView alloc] initWithFrame:CGRectMake(0,0,300, 40)];
//    [cellImg setImage:[UIImage imageNamed:@"DireCellImage.png"]];
//    
   
	if(cell == nil)
	{
		//cell = [[UITableViewCell alloc] initWithFrame:CGRectZero reuseIdentifier:cellIdentifier];
		[[NSBundle mainBundle] loadNibNamed:@"TableCell" owner:self options:nil];
		cell=self.tblViewCell;
		self.tblViewCell=nil;
//        [cell.contentView addSubview:cellImg];  
        
        
	}
    [cell.textLabel setBackgroundColor:[UIColor clearColor]];
    cell.textLabel.font=[UIFont fontWithName:@"Arial" size:14.0];
    
    
    cell.textLabel.font=[UIFont boldSystemFontOfSize:14];
    
    cell.MyLbl1.font=[UIFont fontWithName:@"Arial" size:14.0];
    cell.myLbl2.font=[UIFont fontWithName:@"Arial" size:14.0];
    cell.MyLbl1.font=[UIFont boldSystemFontOfSize:14];
    cell.myLbl2.font=[UIFont boldSystemFontOfSize:14];
    
    cell.MyLbl1.font=[UIFont boldSystemFontOfSize:14];
    cell.myLbl2.font=[UIFont boldSystemFontOfSize:14];
    
    
    
  //  cell.backgroundView = [[[UIImageView alloc] initWithImage:[UIImage imageNamed:@"DireCellImage.png"]] autorelease];
    
	//cell.selectionStyle=UITableViewCellSelectionStyleNone;
    
    if(tableView==tblform)
		
	{
		
        cell.myLbl2.textColor=[UIColor blueColor];
        
		
		
        cell.MyLbl1.text=[arr objectAtIndex:indexPath.row];
		if([arrliformula count]==0){
		}else {
			
            
            
			
			if (indexPath.row==0) {
                str=[[arrliformula objectAtIndex:indexPath.row]valueForKey:@"color"];
                str1=[[arrliformula objectAtIndex:indexPath.row]valueForKey:@"colorvalue"];
                str2=[[arrliformula objectAtIndex:indexPath.row]valueForKey:@"adicolor"];
                str3=[[arrliformula objectAtIndex:indexPath.row]valueForKey:@"volume"];
                str4=[[arrliformula objectAtIndex:indexPath.row]valueForKey:@"time"];
                
                lblvalue= (UILabel *)[cell.contentView viewWithTag:kNameValueTag];
                
                cell.myLbl2.text=[[arrliformula objectAtIndex:indexPath.row]valueForKey:@"Formula_Type"];
            }
            
		}
		
		
    }
	if(indexPath.row==1)
	{
        cell.myLbl2.text=str;
        
    }
	
	
	if(indexPath.row==2)
	{
        cell.myLbl2.text=str1;
		
    }
	if(indexPath.row==3)
	{
        cell.myLbl2.text=str2;
		
		
	}
	if(indexPath.row==4)
	{
        cell.myLbl2.text=str3;
        
	}
	if(indexPath.row==5)
	{
        cell.myLbl2.text=str4;
        
	}
	
    if(tableView==tblservice)
    {	cell.myLbl2.textColor=[UIColor blackColor];
        
        if([arrlistservice count]==0){}
        else {
            
            cell.MyLbl1.text=[[arrlistservice objectAtIndex:indexPath.row]valueForKey:@"name"];
            cell.myLbl2.text=[NSString stringWithFormat:@"%@",[[arrlistservice objectAtIndex:indexPath.row]valueForKey:@"price"]];
            total=(total+[cell.myLbl2.text intValue]);
            
            cell.myLbl2.text=[NSString stringWithFormat:@"$%@",[[arrlistservice objectAtIndex:indexPath.row]valueForKey:@"price"]];
            
            //nslog(@"%d",total);
            
            
            
        }
        label2.text=[NSString stringWithFormat:@"$%d",total];
        
        label2.font=[UIFont boldSystemFontOfSize:14];

        
    }
	return cell;
    
}
-(IBAction)back{
    [self.navigationController popViewControllerAnimated:YES];
    
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
}

-(IBAction)select_service:(id)sender{
     // objappdel.window.rootViewController = objappdel.editdire;
    CGRect newFrame = objappdel.tabmainsub.view.frame;
    newFrame.size.height += objappdel.tabmainsub.tabBar.frame.size.height;
    objappdel.tabmainsub.view.frame = newFrame;
if(objservice)
{

    [objservice release];
    
}
    
    if([arrliformula count]>0){
        
        objappdel.strupdateFormulla=[[arrliformula objectAtIndex:0]valueForKey:@"FID"];
		
        objappdel.stradicolor=[[arrliformula objectAtIndex:0]valueForKey:@"adicolor"];
		objappdel.strvolume=[[arrliformula objectAtIndex:0]valueForKey:@"volume"];
		objappdel.strtime=[[arrliformula objectAtIndex:0]valueForKey:@"time"];
        
        objappdel.strformula=[[arrliformula objectAtIndex:0]valueForKey:@"Formula_Type"];
		
        objappdel.strcolor=[[arrliformula objectAtIndex:0]valueForKey:@"color"];
        objappdel.strcolorform=[[arrliformula objectAtIndex:0]valueForKey:@"colorvalue"];
        
        
        
    }
    
    else{
        
        objappdel.strupdateFormulla=@"No";
        
    }

    
    
objservice=[[Service_Listing alloc]initWithNibName:@"Service_Listing" bundle:nil];
    [self.navigationController pushViewController:objservice animated:YES];
    
    
	
	
	
}
-(IBAction)select_formula:(id)sender{
    CGRect newFrame = objappdel.tabmainsub.view.frame;
    newFrame.size.height += objappdel.tabmainsub.tabBar.frame.size.height;
    objappdel.tabmainsub.view.frame = newFrame;
   
    if(objFormulla)
    {
     [objFormulla release];
    }
    objFormulla=[[Formulla alloc]initWithNibName:@"Formulla" bundle:nil];
    [self.navigationController pushViewController:objFormulla animated:YES];
   
    
  //  objappdel.window.rootViewController = objappdel.navigation;
    
}
/*
// Override to allow orientations other than the default portrait orientation.
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}
*/

- (void)didReceiveMemoryWarning {
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

- (void)viewDidUnload {
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}


- (void)dealloc {
    [super dealloc];
	[objdatabase release];
    [arrlistservice release];
    
    [arrliformula release];
    
}


@end
